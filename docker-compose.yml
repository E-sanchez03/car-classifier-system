services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    # --- AÑADIDO: HEALTHCHECK ---
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:29092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  producer:
    build: .
    container_name: producer
    # --- MODIFICADO: depends_on con condición ---
    depends_on:
      broker:
        condition: service_healthy
    command: python "src/Kafka_Arquitechture/productor_camara.py"
    volumes:
      - ./data/imagenes_test:/app/data/imagenes_test

  consumer:
    build: .
    container_name: consumer
    # --- MODIFICADO: depends_on con condición ---
    depends_on:
      broker:
        condition: service_healthy
    command: python "src/Kafka_Arquitechture/consumidor_clasificador.py"
    volumes:
      - ./models:/app/models